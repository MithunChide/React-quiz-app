{"version":3,"sources":["Option.js","Question.js","questions.js","QuizReport.js","Quiz.js","App.js","reportWebVitals.js","index.js"],"names":["Option","children","rest","Question","onResponse","question","prompt","id","options","className","map","option","index","onClick","questions","correctOption","QuizReport","responses","totalScore","reduce","score","to","i","selectUserOption","correctResponse","style","color","Quiz","useState","questionIndex","setQuestionIndex","setResponses","length","console","log","response","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"0QASeA,MAPf,YAAoC,IAAnBC,EAAkB,EAAlBA,SAAYC,EAAM,iBAE/B,OACE,kDAAWA,GAAX,aAAkBD,MCiBTE,MAlBf,YAA6D,IAA1CC,EAAyC,EAAzCA,WAAyC,IAA9BC,SAAaC,GAAiB,EAApBC,GAAoB,EAAjBD,QAAOE,EAAU,EAAVA,QAE9C,OACA,sBAAKC,UAAU,WAAf,UACI,6BAAKH,IACJE,EAAQE,KAAI,SAACC,EAAOC,GACjB,OAAO,cAAC,EAAD,CAAQC,QAAS,WACpBT,EAAWQ,IADR,SAIFD,GADIA,UCiDNG,EA9DG,CAAC,CACXP,GAAI,IACJD,OAAQ,wBACRE,QAAS,CAAC,YAAa,aAAc,eAAgB,cACrDO,cAAe,GAEnB,CACIR,GAAI,IACJD,OAAQ,oBACRE,QAAS,CAAC,QAAS,UAAW,cAAe,eAC7CO,cAAe,GAEnB,CACIR,GAAI,IACJD,OAAQ,qCACRE,QAAS,CAAC,OAAQ,QAAS,MAAO,QAClCO,cAAe,GAEnB,CACIR,GAAI,IACJD,OAAQ,wBACRE,QAAS,CAAC,YAAa,kBAAmB,gBAAiB,iBAC3DO,cAAe,GAEnB,CACIR,GAAI,IACJD,OAAQ,0CACRE,QAAS,CAAC,GAAI,EAAG,EAAG,IACpBO,cAAe,GAEnB,CACIR,GAAI,IACJD,OAAQ,yCACRE,QAAS,CAAC,UAAW,SAAU,QAAS,WACxCO,cAAe,GAEnB,CACIR,GAAI,IACJD,OAAQ,8BACRE,QAAS,CAAC,OAAQ,MAAO,OAAQ,QACjCO,cAAe,GAEnB,CACIR,GAAI,IACJD,OAAQ,sBACRE,QAAS,CAAC,YAAa,gBAAiB,eAAgB,gBACxDO,cAAe,GAEnB,CACIR,GAAI,IACJD,OAAQ,uBACRE,QAAS,CAAC,QAAS,SAAU,UAAW,WACxCO,cAAe,GAEnB,CACIR,GAAI,IACJD,OAAQ,gCACRE,QAAS,CAAC,QAAS,OAAQ,YAAa,UACxCO,cAAe,IClBRC,MApCf,YAAkD,IAAD,IAA5BC,iBAA4B,MAAlB,GAAkB,MAAfH,iBAAe,MAAL,GAAK,EACvCI,EAAaJ,EAAUK,QAAO,SAACC,EAAMf,EAASO,GAGhD,OAFwBP,EAAjBU,gBACYE,EAAUL,GAElBQ,EAAQ,EAEZA,IACT,GACF,OACI,sBAAKX,UAAU,SAAf,UACI,cAAC,IAAD,CAAMY,GAAG,IAAIZ,UAAU,YAAvB,iCACH,wCACA,gEAAoBS,EAApB,wBAECJ,EAAUJ,KAAI,SAACL,EAASiB,GACrB,IAAOhB,EAAgCD,EAAhCC,OAAOE,EAAyBH,EAAzBG,QAAQO,EAAiBV,EAAjBU,cAEhBQ,EAAmBf,EADJS,EAAUK,IAEzBE,EAAkBhB,EAAQO,GACjC,OACI,qCACA,mBAAGN,UAAU,mBAAb,SAAiCH,IACjC,iDAAmB,sBAAMmB,MAAO,CAACC,MAAM,WAApB,SAAiCH,OACpD,mDAAqB,sBAAME,MAAO,CAACC,MAAO,WAArB,SAAkCF,IAAvD,OACA,iCCADG,MApBf,WACI,MAAuCC,mBAAS,GAAhD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAiCF,mBAAS,IAA1C,mBAAOX,EAAP,KAAkBc,EAAlB,KACM1B,EAAUS,EAAUe,GAG1B,OADuBA,IAAkBf,EAAUkB,OAExC,cAAC,EAAD,CAAYf,UAAWA,EAAWH,UAAWA,KAQvDmB,QAAQC,IAAIjB,GAET,cAAC,EAAD,CAAUb,WANK,SAAC+B,GAChBJ,EAAa,GAAD,mBAAKd,GAAL,CAAgBkB,KAC5BL,EAAiBD,EAAgB,IAICxB,SAAUA,MCarC+B,MA7Bf,WACE,OACE,qBAAK3B,UAAU,MAAf,SACE,eAAC,IAAD,WACE,2BAAUA,UAAU,WAApB,UACE,eAAC,IAAD,CAAO4B,OAAK,EAACC,KAAK,IAAlB,UACE,2GACA,cAAC,IAAD,CAAM7B,UAAU,kBAAkBY,GAAG,QAArC,0FAIF,cAAC,IAAD,CAAOgB,OAAK,EAACC,KAAK,QAAlB,SACE,cAAC,EAAD,CAAMxB,UAAWA,SAGrB,eAAC,IAAD,CAAOuB,OAAK,EAACC,KAAK,IAAlB,UACE,2GACA,cAAC,IAAD,CAAM7B,UAAU,kBAAkBY,GAAG,QAArC,0FAIF,cAAC,IAAD,CAAOgB,OAAK,EAACC,KAAK,QAAlB,SACE,cAAC,EAAD,CAAMxB,UAAWA,YCpBZyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a922f3bb.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Option({children,...rest}){\r\n\r\n    return(\r\n      <button{...rest}>{children}</button>\r\n    )\r\n}\r\n\r\nexport default Option;","// import react from'react'; \r\n// import questions from './questions';\r\nimport Option from './Option';\r\n\r\nfunction Question({onResponse,question:{id,prompt,options}}){\r\n\r\n    return (\r\n    <div className=\"question\">\r\n        <h1>{prompt}</h1>\r\n        {options.map((option,index) => {\r\n            return <Option onClick={()=>{\r\n                onResponse(index)\r\n                }}\r\n                key={option}>\r\n                {option}\r\n                </Option>\r\n            })\r\n        }\r\n       \r\n    </div>\r\n    );\r\n}\r\nexport default Question;","const questions = [{\r\n        id: 101,\r\n        prompt: \"Who created React Js?\",\r\n        options: [\"Elon Musk\", \"Ben Jeffos\", \"Jordan Walke\", \"Ratan Tata\"],\r\n        correctOption: 2,\r\n    },\r\n    {\r\n        id: 102,\r\n        prompt: \"Who Won WTC 2021?\",\r\n        options: [\"India\", \"England\", \"New Zealand\", \"Virat Kolhi\"],\r\n        correctOption: 2,\r\n    },\r\n    {\r\n        id: 103,\r\n        prompt: \"What is favourate color of Mithun?\",\r\n        options: [\"Blue\", \"Black\", \"Red\", \"Pink\"],\r\n        correctOption: 1,\r\n    },\r\n    {\r\n        id: 104,\r\n        prompt: \"Who created Facebook?\",\r\n        options: [\"Bill Gate\", \"Mark Zuckerberg\", \"Narendra Modi\", \"Mukesh Ambani\"],\r\n        correctOption: 1,\r\n    },\r\n    {\r\n        id: 105,\r\n        prompt: \"How many player in Cricket in One team?\",\r\n        options: [10, 7, 9, 11],\r\n        correctOption: 3,\r\n    },\r\n    {\r\n        id: 106,\r\n        prompt: \"Which is the favourite game of Mithun?\",\r\n        options: [\"Kabaddi\", \"Carrom\", \"Cards\", \"Cricket\"],\r\n        correctOption: 0,\r\n    },\r\n    {\r\n        id: 107,\r\n        prompt: \"What is nickname MS. Dhoni?\",\r\n        options: [\"Viru\", \"Avi\", \"Mahi\", \"Yuzi\"],\r\n        correctOption: 2,\r\n    },\r\n    {\r\n        id: 108,\r\n        prompt: \"Who is PM of India?\",\r\n        options: [\"Amit Shah\", \"Narendra Modi\", \"Mithun Chide\", \"Akshay Kapur\"],\r\n        correctOption: 1,\r\n    },\r\n    {\r\n        id: 109,\r\n        prompt: \"Who is Akshay Kumar?\",\r\n        options: [\"Actor\", \"Singer\", \"Thiefer\", \"Painter\"],\r\n        correctOption: 0,\r\n    },\r\n    {\r\n        id: 110,\r\n        prompt: \"What is the Capital of India?\",\r\n        options: [\"Surat\", \"Asam\", \"New Dilhi\", \"Mumbai\"],\r\n        correctOption: 2,\r\n    },\r\n];\r\n\r\nexport default questions;","// import React from \"react\";\r\n// import questions from \"./questions\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction QuizReport({responses=[],questions=[]}) {\r\n    const totalScore = questions.reduce((score,question,index)=>{\r\n        const {correctOption} = question;\r\n        const userOption = responses[index];\r\n        if(correctOption === userOption){\r\n            return score + 1;\r\n        }\r\n        return score;\r\n    },0);\r\n    return (\r\n        <div className=\"height\">\r\n            <Link to=\"/\" className=\"take-home\">Take me HomePage...</Link>\r\n         <h1>Report</h1>\r\n         <h1> ‚ú®‚ú®‚ú®You Scored {totalScore}‚ú®‚ú®‚ú®</h1>\r\n\r\n         {questions.map((question,i)=>{\r\n             const {prompt,options,correctOption} = question;\r\n             const userResponse = responses[i];\r\n             const selectUserOption = options[userResponse];\r\n             const correctResponse = options[correctOption]\r\n            return (\r\n                <>\r\n                <p className=\"question--Prompt\">{prompt}</p>\r\n                <p>Your Response = <span style={{color:\"#b4ba65\"}}>{selectUserOption}</span></p>\r\n                <p>Correct Response =<span style={{color: \"#65afba\"}}>{correctResponse}</span> </p>\r\n                <hr/>\r\n                </>\r\n                \r\n            )\r\n          \r\n         })}\r\n       \r\n        </div>\r\n      \r\n    )\r\n}\r\nexport default QuizReport;","import React from 'react';\r\nimport { useState } from 'react'; \r\nimport Question from \"./Question\";\r\n import questions from './questions';\r\n import QuizReport from './QuizReport';\r\n\r\n\r\n\r\n\r\nfunction Quiz(){\r\n    const [questionIndex,setQuestionIndex]=useState(0);\r\n    const [responses, setResponses] =useState([]);\r\n    const question= questions[questionIndex];\r\n\r\n    const quizComppleted = questionIndex === questions.length;\r\n    if(quizComppleted){\r\n        return <QuizReport responses={responses} questions={questions} />\r\n    }\r\n\r\n\r\n    const onResponse = (response) =>{\r\n        setResponses([...responses, response])\r\n        setQuestionIndex(questionIndex + 1);\r\n     }\r\n     console.log(responses);\r\n    return(\r\n        <Question onResponse={onResponse} question={question}/>\r\n    )\r\n}\r\nexport default Quiz;","// import logo from \"./logo.svg\";\nimport \"./App.css\";\n// import Question from \"./Question\";\n// import questions from './questions';\nimport { Route, Switch } from \"react-router\";\nimport { Link } from \"react-router-dom\";\n\nimport Quiz from \"./Quiz\";\nimport questions from \"./questions\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Switch>\n        <homepage className=\"homepage\">\n          <Route exact path=\"/\">\n            <h1>ü•∞ü•∞ Welcome to my KBC Round ü•∞ü•∞</h1>\n            <Link className=\"lets-begin-link\" to=\"/quiz\">\n              ‚ù§Ô∏è‚Äçüî• Let's Begin ‚ù§Ô∏è‚Äçüî•\n            </Link>\n          </Route>\n          <Route exact path=\"/quiz\">\n            <Quiz questions={questions} />\n          </Route>\n        </homepage>\n        <Route exact path=\"/\">\n          <h1>ü•∞ü•∞ Welcome to my KBC Round ü•∞ü•∞</h1>\n          <Link className=\"lets-begin-link\" to=\"/quiz\">\n            ‚ù§Ô∏è‚Äçüî• Let's Begin ‚ù§Ô∏è‚Äçüî•\n          </Link>\n        </Route>\n        <Route exact path=\"/quiz\">\n          <Quiz questions={questions} />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {BrowserRouter} from \"react-router-dom\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}